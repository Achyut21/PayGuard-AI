#pragma version 10
intcblock 1 32
bytecblock 0x61646d696e 0x6e657874526571756573744964 0x746f74616c4167656e7473 0x151f7c75

// This TEAL was generated by TEALScript v0.107.0
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
pushint 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	// The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?
	err

// createApplication(address)void
*abi_route_createApplication:
	// admin: address
	txna ApplicationArgs 1
	dup
	len
	intc 1 // 32
	==

	// argument 0 (admin) for createApplication must be a address
	assert

	// execute createApplication(address)void
	callsub createApplication
	intc 0 // 1
	return

// createApplication(admin: Address): void
createApplication:
	proto 1 0

	// contracts/PayGuardAI.ts:12
	// this.admin.value = admin
	bytec 0 //  "admin"
	frame_dig -1 // admin: Address
	app_global_put

	// contracts/PayGuardAI.ts:13
	// this.nextRequestId.value = 1
	bytec 1 //  "nextRequestId"
	intc 0 // 1
	app_global_put

	// contracts/PayGuardAI.ts:14
	// this.totalAgents.value = 0
	bytec 2 //  "totalAgents"
	pushint 0
	app_global_put
	retsub

// createAgentWallet(string,uint64)void
*abi_route_createAgentWallet:
	// spendingLimit: uint64
	txna ApplicationArgs 2
	btoi

	// agentId: string
	txna ApplicationArgs 1
	extract 2 0

	// execute createAgentWallet(string,uint64)void
	callsub createAgentWallet
	intc 0 // 1
	return

// createAgentWallet(agentId: string, spendingLimit: uint64): void
createAgentWallet:
	proto 2 0

	// contracts/PayGuardAI.ts:20
	// assert(this.txn.sender === this.admin.value)
	txn Sender
	bytec 0 //  "admin"
	app_global_get
	==
	assert

	// contracts/PayGuardAI.ts:24
	// this.totalAgents.value = this.totalAgents.value + 1
	bytec 2 //  "totalAgents"
	dup
	app_global_get
	intc 0 // 1
	+
	app_global_put

	// contracts/PayGuardAI.ts:27
	// log(agentId)
	frame_dig -1 // agentId: string
	log

	// contracts/PayGuardAI.ts:28
	// log(itob(spendingLimit))
	frame_dig -2 // spendingLimit: uint64
	itob
	log
	retsub

// requestPayment(string,uint64,address)uint64
*abi_route_requestPayment:
	// The ABI return prefix
	bytec 3 // 0x151f7c75

	// recipient: address
	txna ApplicationArgs 3
	dup
	len
	intc 1 // 32
	==

	// argument 0 (recipient) for requestPayment must be a address
	assert

	// amount: uint64
	txna ApplicationArgs 2
	btoi

	// agentId: string
	txna ApplicationArgs 1
	extract 2 0

	// execute requestPayment(string,uint64,address)uint64
	callsub requestPayment
	itob
	concat
	log
	intc 0 // 1
	return

// requestPayment(agentId: string, amount: uint64, recipient: Address): uint64
requestPayment:
	proto 3 1

	// Push empty bytes after the frame pointer to reserve space for local variables
	pushbytes 0x

	// contracts/PayGuardAI.ts:38
	// requestId = this.nextRequestId.value
	bytec 1 //  "nextRequestId"
	app_global_get
	frame_bury 0 // requestId: uint64

	// contracts/PayGuardAI.ts:39
	// this.nextRequestId.value = requestId + 1
	bytec 1 //  "nextRequestId"
	frame_dig 0 // requestId: uint64
	intc 0 // 1
	+
	app_global_put

	// contracts/PayGuardAI.ts:42
	// log(agentId)
	frame_dig -1 // agentId: string
	log

	// contracts/PayGuardAI.ts:43
	// log(itob(amount))
	frame_dig -2 // amount: uint64
	itob
	log

	// contracts/PayGuardAI.ts:45
	// return requestId;
	frame_dig 0 // requestId: uint64

	// set the subroutine return value
	frame_bury 0
	retsub

// approvePayment(uint64)void
*abi_route_approvePayment:
	// requestId: uint64
	txna ApplicationArgs 1
	btoi

	// execute approvePayment(uint64)void
	callsub approvePayment
	intc 0 // 1
	return

// approvePayment(requestId: uint64): void
approvePayment:
	proto 1 0

	// contracts/PayGuardAI.ts:51
	// assert(this.txn.sender === this.admin.value)
	txn Sender
	bytec 0 //  "admin"
	app_global_get
	==
	assert

	// contracts/PayGuardAI.ts:54
	// log(itob(requestId))
	frame_dig -1 // requestId: uint64
	itob
	log
	retsub

// denyPayment(uint64)void
*abi_route_denyPayment:
	// requestId: uint64
	txna ApplicationArgs 1
	btoi

	// execute denyPayment(uint64)void
	callsub denyPayment
	intc 0 // 1
	return

// denyPayment(requestId: uint64): void
denyPayment:
	proto 1 0

	// contracts/PayGuardAI.ts:60
	// assert(this.txn.sender === this.admin.value)
	txn Sender
	bytec 0 //  "admin"
	app_global_get
	==
	assert

	// contracts/PayGuardAI.ts:63
	// log(itob(requestId))
	frame_dig -1 // requestId: uint64
	itob
	log
	retsub

// setSpendingLimit(string,uint64)void
*abi_route_setSpendingLimit:
	// newLimit: uint64
	txna ApplicationArgs 2
	btoi

	// agentId: string
	txna ApplicationArgs 1
	extract 2 0

	// execute setSpendingLimit(string,uint64)void
	callsub setSpendingLimit
	intc 0 // 1
	return

// setSpendingLimit(agentId: string, newLimit: uint64): void
setSpendingLimit:
	proto 2 0

	// contracts/PayGuardAI.ts:69
	// assert(this.txn.sender === this.admin.value)
	txn Sender
	bytec 0 //  "admin"
	app_global_get
	==
	assert

	// contracts/PayGuardAI.ts:72
	// log(agentId)
	frame_dig -1 // agentId: string
	log

	// contracts/PayGuardAI.ts:73
	// log(itob(newLimit))
	frame_dig -2 // newLimit: uint64
	itob
	log
	retsub

// getAgentBalance(string)uint64
*abi_route_getAgentBalance:
	// The ABI return prefix
	bytec 3 // 0x151f7c75

	// agentId: string
	txna ApplicationArgs 1
	extract 2 0

	// execute getAgentBalance(string)uint64
	callsub getAgentBalance
	itob
	concat
	log
	intc 0 // 1
	return

// getAgentBalance(agentId: string): uint64
getAgentBalance:
	proto 1 1

	// contracts/PayGuardAI.ts:80
	// log(agentId)
	frame_dig -1 // agentId: string
	log

	// contracts/PayGuardAI.ts:81
	// return 1000000;
	pushint 1000000
	retsub

// deactivateAgent(string)void
*abi_route_deactivateAgent:
	// agentId: string
	txna ApplicationArgs 1
	extract 2 0

	// execute deactivateAgent(string)void
	callsub deactivateAgent
	intc 0 // 1
	return

// deactivateAgent(agentId: string): void
deactivateAgent:
	proto 1 0

	// contracts/PayGuardAI.ts:87
	// assert(this.txn.sender === this.admin.value)
	txn Sender
	bytec 0 //  "admin"
	app_global_get
	==
	assert

	// contracts/PayGuardAI.ts:90
	// log(agentId)
	frame_dig -1 // agentId: string
	log
	retsub

*create_NoOp:
	pushbytes 0xd324bea4 // method "createApplication(address)void"
	txna ApplicationArgs 0
	match *abi_route_createApplication

	// this contract does not implement the given ABI method for create NoOp
	err

*call_NoOp:
	pushbytes 0x5419055d // method "createAgentWallet(string,uint64)void"
	pushbytes 0x7457a5b8 // method "requestPayment(string,uint64,address)uint64"
	pushbytes 0x4c6de410 // method "approvePayment(uint64)void"
	pushbytes 0x489eeab7 // method "denyPayment(uint64)void"
	pushbytes 0x02402f31 // method "setSpendingLimit(string,uint64)void"
	pushbytes 0x0e751a33 // method "getAgentBalance(string)uint64"
	pushbytes 0xe0f8fd56 // method "deactivateAgent(string)void"
	txna ApplicationArgs 0
	match *abi_route_createAgentWallet *abi_route_requestPayment *abi_route_approvePayment *abi_route_denyPayment *abi_route_setSpendingLimit *abi_route_getAgentBalance *abi_route_deactivateAgent

	// this contract does not implement the given ABI method for call NoOp
	err