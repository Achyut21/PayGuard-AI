{
  "hints": {
    "createApplication(address)void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "createAgentWallet(string,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "requestPayment(string,uint64,address)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "approvePayment(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "denyPayment(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "setSpendingLimit(string,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getAgentBalance(string)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "deactivateAgent(string)void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "admin": {
          "type": "bytes",
          "key": "admin"
        },
        "nextRequestId": {
          "type": "uint64",
          "key": "nextRequestId"
        },
        "totalAgents": {
          "type": "uint64",
          "key": "totalAgents"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 1,
      "num_uints": 2
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "PayGuardAI",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [
          {
            "name": "admin",
            "type": "address"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "createAgentWallet",
        "args": [
          {
            "name": "agentId",
            "type": "string"
          },
          {
            "name": "spendingLimit",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "requestPayment",
        "args": [
          {
            "name": "agentId",
            "type": "string"
          },
          {
            "name": "amount",
            "type": "uint64"
          },
          {
            "name": "recipient",
            "type": "address"
          }
        ],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "approvePayment",
        "args": [
          {
            "name": "requestId",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "denyPayment",
        "args": [
          {
            "name": "requestId",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "setSpendingLimit",
        "args": [
          {
            "name": "agentId",
            "type": "string"
          },
          {
            "name": "newLimit",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "getAgentBalance",
        "args": [
          {
            "name": "agentId",
            "type": "string"
          }
        ],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "deactivateAgent",
        "args": [
          {
            "name": "agentId",
            "type": "string"
          }
        ],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}